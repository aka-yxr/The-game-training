#include<stdio.h>
#include<math.h>

/*
分析
1.沙漏可以分为上下两部分，上半部分从第一行到 只有一个字符的那一行。
2.行数和字符的数量关系为，字符数=2*上半部分行数*上半部分行数-1；即令上半部分行数为n，沙漏字符数为sum；sum=2*n*n-1；
3.由2就可以计算出上半部分的行数。即计算出2中的n；
4.接下来就是去实现沙漏。
代码如下：
*/

int main()
{
    char c;
    int n;
    scanf("%d %c",&n,&c);//输入
    int x=sqrt((n+1)/2);//计算出上半部分的行数，这样也就知道了下半部分的行数
    //上半部分  另：要思考好 行数变化 与空格、字符 变化的关系。
    for(int i=x;i>0;i--)//行
    {
        for(int j=i;j<x;j++)//空格
        {
            printf(" ");
        }
        for(int k=0;k<2*i-1;k++)//符号
        {
            printf("%c",c);
        }
        printf("\n");
    }
    //下半部分
    for(int i=2;i<=x;i++)//行
    {
        for(int j=i;j<=x-1;j++)//空格
            printf(" ");
        for(int k=0;k<2*i-1;k++)//符号
            printf("%c",c);
        printf("\n");
    }
    //输出剩余字符数
    printf("%d\n",((n+1)-(2*x*x)));
    
    return 0;
}
